     1                                          core_base_address equ 0x00040000    ;常数，内核加载的起始内存地址
     2                                          core_start_sector equ 0x00000001    ;常数，内核的起始逻辑扇区号
     3                                  
     4 00000000 8CC8                            mov ax, cs
     5 00000002 8ED0                            mov ss, ax
     6 00000004 BC007C                          mov sp, 0x7c00
     7                                  
     8                                  
     9 00000007 2E66A1[9B7D]                    mov eax, [cs:pgdt+0x7c00+0x02]      ;GDT的32位物理地址
    10 0000000C 6631D2                          xor edx, edx
    11 0000000F 66BB10000000                    mov ebx, 16
    12 00000015 66F7F3                          div ebx                             ;分解成16位逻辑地址
    13                                  
    14 00000018 8ED8                            mov ds, eax                         ;令DS指向该段以进行操作
    15 0000001A 6689D3                          mov ebx, edx                        ;段内起始偏移地址
    16                                  
    17                                          ;跳过0#号描述符的槽位
    18                                          ;创建1#描述符，这是一个数据段，对应0~4G的线性地址空间
    19 0000001D 6667C74308FFFF0000              mov dword [ebx+0x08], 0x0000ffff    ;基地址为0，段界限为0xFFFFF
    20 00000026 6667C7430C0092CF00              mov dword [ebx+0x0c], 0x00cf9200    ;粒度为4KB，存储器段描述符
    21                                  
    22                                          ;创建保护模式下初始代码段描述符
    23 0000002F 6667C74310FF01007C              mov dword [ebx+0x10], 0x7c0001ff    ;基地址为 0x00007c00，界限为 0x1FF
    24 00000038 6667C7431400984000              mov dword [ebx+0x14], 0x00409800    ;粒度为1字节，代码段描述符
    25                                  
    26                                          ;建立保护模式下的堆栈段描述符
    27 00000041 6667C74318FEFF007C              mov dword [ebx+0x18], 0x7c00fffe    ;基地址为 0x00007c00，界限为 0xFFFFE
    28 0000004A 6667C7431C0096CF00              mov dword [ebx+0x1c], 0x00cf9600    ;粒度为4KB
    29                                  
    30                                          ;建立保护模式下的显示缓冲区描述符
    31 00000053 6667C74320FF7F0080              mov dword [ebx+0x20], 0x80007fff    ;基地址为 0x0000B800，界限为 0x07FFF
    32 0000005C 6667C743240B924000              mov dword [ebx+0x24], 0x0040920b    ;粒度为1字节
    33                                  
    34                                          ;初始化描述符表寄存器GDTR
    35 00000065 2EC706[997D]2700                mov word [cs: pgdt+0x7c00], 39      ;描述符表的结项
    36                                  
    37 0000006C 2E0F0116[997D]                  lgdt [cs: pgdt+0x7c00]
    38                                  
    39 00000072 E492                            in  al, 0x92                        ;南桥芯片的端口
    40 00000074 0C02                            or  al, 0000_0010B
    41 00000076 E692                            out 0x92, al                        ;打开A20
    42                                  
    43 00000078 FA                              cli                                 ;中断机制尚未建立
    44                                  
    45 00000079 0F20C0                          mov eax, cr0
    46 0000007C 6683C801                        or  eax, 1
    47 00000080 0F22C0                          mov cr0, eax                        ;设置PE位
    48                                  
    49                                          ;以下进入保护模式... ...
    50 00000083 66EA[8B000000]1000              jmp dword 0x0010:flush              ;16位的描述符选择子：32位偏移
    51                                                                              ;清空流水线并串行化处理器
    52                                  
    53                                          [bits 32]
    54                                      flush:
    55 0000008B B808000000                      mov eax, 0x0008                     ;加载数据段(0,,4GB)选择子
    56 00000090 8ED8                            mov ds, eax
    57                                  
    58 00000092 B818000000                      mov eax, 0x0018                      ;加载堆栈段选择子
    59 00000097 8ED0                            mov ss, eax
    60 00000099 31E4                            xor esp, esp                        ;堆栈指针 <- 0
    61                                  
    62                                          ;以下加载系统核心程序
    63 0000009B BF00000400                      mov edi, core_base_address
    64                                  
    65 000000A0 B801000000                      mov eax, core_start_sector
    66 000000A5 89FB                            mov ebx, edi                        ;起始地址
    67 000000A7 E88D000000                      call read_hard_disk_0               ;一下读取程序的起始部分(一个扇区)
    68                                  
    69                                          ;以下判断整个程序有多大
    70 000000AC 8B07                            mov eax, [edi]                      ;核心程序尺寸
    71 000000AE 31D2                            xor edx, edx
    72 000000B0 B900020000                      mov ecx, 512                        ;512字节每扇区
    73 000000B5 F7F1                            div ecx
    74                                  
    75 000000B7 09D2                            or  edx, edx
    76 000000B9 7501                            jnz @1                              ;未除尽，因此结果比实际扇区少1
    77 000000BB 48                              dec eax
    78                                      @1:
    79 000000BC 09C0                            or eax, eax                         ;考虑实际长度<=512个字节的情况
    80 000000BE 7410                            jz setup
    81                                  
    82                                          ;读取剩余的扇区
    83 000000C0 89C1                            mov ecx, eax                        ;32位模式下的LOOP
    84 000000C2 B801000000                      mov eax, core_start_sector
    85 000000C7 40                              inc eax                             ;从下一个扇区接着读
    86                                      @2:
    87 000000C8 E86C000000                      call read_hard_disk_0
    88 000000CD 40                              inc eax
    89 000000CE E2F8                            loop @2                             ;循环读，直到读完整个内核
    90                                  
    91                                      setup:
    92 000000D0 8B35[9B7D0000]                  mov esi, [0x7c00+pgdt+0x02]         ;不可以在代码段内寻址pgdt,但可以
    93                                                                              ;通过4GB的段访问
    94                                          ;建立公用例程段描述符
    95 000000D6 8B4704                          mov eax, [edi+0x04]                 ;公用例程代码段起始汇编地址
    96 000000D9 8B5F08                          mov ebx, [edi+0x08]                 ;核心数据段汇编地址
    97 000000DC 29C3                            sub ebx, eax
    98 000000DE 4B                              dec ebx                             ;公用例程的段界限
    99 000000DF 01F8                            add eax, edi                        ;公用例程的段基地址
   100 000000E1 B900984000                      mov ecx, 0x00409800                 ;字节粒度的代码段描述符
   101 000000E6 E893000000                      call make_gdt_descriptor
   102 000000EB 894628                          mov [esi+0x28], eax
   103 000000EE 89562C                          mov [esi+0x2c], edx
   104                                  
   105                                          ;建立核心数据段描述符
   106 000000F1 8B4708                          mov eax, [edi+0x08]                 ;核心数据段起始汇编地址
   107 000000F4 8B5F0C                          mov ebx, [edi+0x0c]                 ;核心代码段汇编地址
   108 000000F7 29C3                            sub ebx, eax
   109 000000F9 4B                              dec ebx                             ;核心数据段界限
   110 000000FA 01F8                            add eax, edi                        ;核心数据段基地址
   111 000000FC B900924000                      mov ecx, 0x00409200                 ;字节粒度的数据段描述符
   112 00000101 E878000000                      call make_gdt_descriptor
   113 00000106 894630                          mov [esi+0x30], eax
   114 00000109 895634                          mov [esi+0x34], edx
   115                                  
   116                                          ;建立核心代码段描述符
   117 0000010C 8B470C                          mov eax, [edi+0x0c]                 ;核心代码段起始汇编地址
   118 0000010F 8B1F                            mov ebx, [edi+0x00]                 ;程序总长度
   119 00000111 29C3                            sub ebx, eax
   120 00000113 4B                              dec ebx                             ;核心代码段界限
   121 00000114 01F8                            add eax, edi                        ;核心代码段基地址
   122 00000116 B900984000                      mov ecx, 0x00409800                 ;字节粒度的代码段描述符
   123 0000011B E85E000000                      call make_gdt_descriptor
   124 00000120 894638                          mov [esi+0x38], eax
   125 00000123 89563C                          mov [esi+0x3c], edx
   126                                  
   127 00000126 66C705[997D0000]3F-             mov word [0x7c00+pgdt], 63          ;描述符的界限
   127 0000012E 00                 
   128                                  
   129 0000012F 0F0115[997D0000]                lgdt [0x7c00+pgdt]
   130                                  
   131 00000136 FF6F10                          jmp far [edi+0x10]
   132                                  
   133                                  ;-------------------------------------------------------------------------------
   134                                  read_hard_disk_0:                           ;从硬盘读取一个逻辑扇区
   135                                                                              ;EAX=逻辑扇区号
   136                                                                              ;DS:EBX=目标缓冲区地址
   137                                                                              ;返回：EBX=EBX+512
   138 00000139 50                              push eax
   139 0000013A 51                              push ecx
   140 0000013B 52                              push edx
   141                                  
   142 0000013C 50                              push eax
   143                                  
   144 0000013D 66BAF201                        mov dx, 0x1f2
   145 00000141 B001                            mov al, 1
   146 00000143 EE                              out dx, al                          ;读取的扇区数
   147                                  
   148 00000144 6642                            inc dx                              ;0x1f3
   149 00000146 58                              pop eax
   150 00000147 EE                              out dx, al                          ;LBA地址 7~0
   151                                  
   152 00000148 6642                            inc dx                              ;0x1f4
   153 0000014A B108                            mov cl, 8
   154 0000014C D3E8                            shr eax, cl
   155 0000014E EE                              out dx, al                          ;LBA地址15~8
   156                                  
   157 0000014F 6642                            inc dx                              ;0x1f5
   158 00000151 D3E8                            shr eax, cl
   159 00000153 EE                              out dx, al                          ;LBA地址23~16
   160                                  
   161 00000154 6642                            inc dx                              ;0x1f6
   162 00000156 D3E8                            shr eax, cl
   163 00000158 0CE0                            or  al, 0xe0                        ;LBA地址27~24
   164 0000015A EE                              out dx, al
   165                                  
   166 0000015B 6642                            inc dx                              ;0x1f7
   167 0000015D B020                            mov al, 0x20                        ;读命令
   168 0000015F EE                              out dx, al
   169                                  
   170                                      .waits:
   171 00000160 EC                              in  al, dx
   172 00000161 2488                            and al, 0x88
   173 00000163 3C08                            cmp al, 0x08
   174 00000165 75F9                            jnz .waits                          ;不忙，且硬盘已准备好数据传输
   175                                  
   176 00000167 B900010000                      mov ecx, 256                        ;总共要读取的字数
   177 0000016C 66BAF001                        mov dx, 0x1f0
   178                                      .readw:
   179 00000170 66ED                            in  ax, dx
   180 00000172 668903                          mov [ebx], ax
   181 00000175 83C302                          add ebx, 2
   182 00000178 E2F6                            loop .readw
   183                                  
   184 0000017A 5A                              pop edx
   185 0000017B 59                              pop ecx
   186 0000017C 58                              pop eax
   187                                  
   188 0000017D C3                              ret
   189                                  
   190                                  ;-------------------------------------------------------------------------------
   191                                  make_gdt_descriptor:                        ;构造描述符
   192                                                                              ;输入： EAX=线性基地址
   193                                                                              ;      EBX=段界限
   194                                                                              ;      ECX=属性（各属性位都在原始
   195                                                                              ;      位置，其它没用到的位置0）
   196                                                                              ;返回：EDX:EAX=完整的描述符
   197 0000017E 89C2                            mov edx, eax
   198 00000180 C1E010                          shl eax, 16
   199 00000183 6609D8                          or  ax, bx                          ;描述符前32位(EAX)构造完毕
   200                                  
   201 00000186 81E20000FFFF                    and edx, 0xffff0000                 ;清除基地址中无关的位
   202 0000018C C1C208                          rol edx, 8
   203 0000018F 0FCA                            bswap edx                           ;装配基址的31~24和23~16
   204                                  
   205 00000191 6631DB                          xor bx, bx
   206 00000194 09DA                            or  edx, ebx                        ;装配段界限的高4位
   207                                  
   208 00000196 09CA                            or  edx, ecx                        ;装配属性
   209                                  
   210 00000198 C3                              ret
   211                                  
   212                                  ;-------------------------------------------------------------------------------
   213 00000199 0000                            pgdt              dw 0
   214 0000019B 007E0000                                          dd 0x00007e00     ;GDT的物理地址
   215                                  
   216                                  ;-------------------------------------------------------------------------------
   217                                  
   218 0000019F 00<rep 5Fh>                     times 510-($-$$)  db 0
   219 000001FE 55AA                                              db 0x55, 0xaa
