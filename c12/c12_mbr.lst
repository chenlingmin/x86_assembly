     1                                          ;设置堆栈段和栈指针
     2 00000000 668CC8                          mov eax, cs
     3 00000003 8ED0                            mov ss, eax
     4 00000005 BC007C                          mov sp, 0x7c00
     5                                  
     6                                          ;计算GDT所在的逻辑段地址
     7 00000008 2E66A1[497D]                    mov eax, [cs:pgdt+0x7c00+0x02]      ;GDT的32位线性基地址
     8 0000000D 6631D2                          xor edx, edx
     9 00000010 66BB10000000                    mov ebx, 16
    10 00000016 66F7F3                          div ebx                             ;分解成16位的逻辑地址
    11                                  
    12 00000019 8ED8                            mov ds, eax                         ;令DS指向该段以进行操作
    13 0000001B 6689D3                          mov ebx, edx                        ;段内起始偏移地址
    14                                  
    15                                          ;创建#0描述符，空描述符，处理器的要求
    16 0000001E 6667C70300000000                mov dword [ebx+0x00], 0x00000000
    17 00000026 6667C7430400000000              mov dword [ebx+0x04], 0x00000000
    18                                  
    19                                          ;创建#1描述符，这是一个数据段，对应0~4G的线性地址空间
    20 0000002F 6667C74308FFFF0000              mov dword [ebx+0x08], 0x0000ffff    ;基地址为0，段界限为 0xffff
    21 00000038 6667C7430C0092CF00              mov dword [ebx+0x0c], 0x00cf9200    ;粒度为 4KB，存储器段描述符
    22                                  
    23                                          ;创建保护模式下初始代码段描述符
    24 00000041 6667C74310FF01007C              mov dword [ebx+0x10], 0x7c0001ff    ;及地址为0x00007c00, 512字节
    25 0000004A 6667C7431400984000              mov dword [ebx+0x14], 0x00409800    ;粒度为1字节，代码段描述符
    26                                  
    27                                          ;创建以上代码段的别名描述符
    28 00000053 6667C74318FF01007C              mov dword [ebx+0x18], 0x7c0001ff    ;及地址为0x00007c00, 512字节
    29 0000005C 6667C7431C00924000              mov dword [ebx+0x1c], 0x00409200    ;粒度为1字节，数据段描述符
    30                                  
    31 00000065 6667C74320FEFF007C              mov dword [ebx+0x20], 0x7c00fffe
    32 0000006E 6667C743240096CF00              mov dword [ebx+0x24], 0x00cf9600
    33                                  
    34                                          ;初始化描述符表寄存器GDTR
    35 00000077 2EC706[477D]2700                mov word [cs:pgdt+0x7c00], 39       ;描述符表的界限
    36                                  
    37 0000007E 2E0F0116[477D]                  lgdt [cs:pgdt+0x7c00]
    38                                  
    39 00000084 E492                            in  al, 0x92                        ;南桥芯片内的端口
    40 00000086 0C02                            or  al, 0000_0010B
    41 00000088 E692                            out 0x92, al                        ;打开A20
    42                                  
    43 0000008A FA                              cli                                 ;中断机制尚未工作
    44                                  
    45 0000008B 0F20C0                          mov eax, cr0
    46 0000008E 6683C801                        or  eax, 1
    47 00000092 0F22C0                          mov cr0, eax                        ;设置 PE 位
    48                                  
    49                                  
    50                                          ;以下进入保护模式... ...
    51 00000095 66EA[9D000000]1000              jmp dword 0x0010:flush              ;16位的描述符选择子：32位偏移
    52                                  
    53                                          [bits 32]
    54                                      flush:
    55 0000009D B818000000                      mov eax, 0x0018
    56 000000A2 8ED8                            mov ds, eax
    57                                  
    58 000000A4 B808000000                      mov eax, 0x0008                     ;加载数据段(0..4GB)选择子
    59 000000A9 8EC0                            mov es, eax
    60 000000AB 8EE0                            mov fs, eax
    61 000000AD 8EE8                            mov gs, eax
    62                                  
    63 000000AF B820000000                      mov eax, 0x0020                     ;0000 0000 0010 0000
    64 000000B4 8ED0                            mov ss, eax
    65 000000B6 31E4                            xor esp, esp                        ;ESP <- 0
    66                                  
    67 000000B8 26C70500800B005007-             mov dword [es:0x0b8000], 0x072e0750 ;字符'P'、'.'及其显示属性
    67 000000C1 2E07               
    68 000000C3 26C70504800B004D07-             mov dword [es:0x0b8004], 0x072e074d ;字符'M'、'.'及其显示属性
    68 000000CC 2E07               
    69 000000CE 26C70508800B002007-             mov dword [es:0x0b8008], 0x07200720 ;两个空白字符及其显示属性
    69 000000D7 2007               
    70 000000D9 26C7050C800B006F07-             mov dword [es:0x0b800c], 0x076b076f ;字符'o'、'k'及其显示属性
    70 000000E2 6B07               
    71                                  
    72                                          ;开始冒泡排序
    73 000000E4 B924000000                      mov ecx, pgdt-string-1              ;遍历次数=串长度-1
    74                                      @@1:
    75 000000E9 51                              push ecx                            ;32位模式下的loop使用ECX
    76 000000EA 6631DB                          xor bx, bx
    77                                      @@2:
    78 000000ED 66678B87[2201]                  mov ax, [string+bx]
    79 000000F3 38C4                            cmp ah, al                          ;ah中存放的是源字的高字节
    80 000000F5 7D08                            jge @@3
    81 000000F7 86C4                            xchg al, ah
    82 000000F9 66678987[2201]                  mov [string+bx], ax
    83                                      @@3:
    84 000000FF 6643                            inc bx
    85 00000101 E2EA                            loop @@2
    86 00000103 59                              pop ecx
    87 00000104 E2E3                            loop @@1
    88                                  
    89 00000106 B925000000                      mov ecx, pgdt-string
    90 0000010B 31DB                            xor ebx, ebx                        ;偏移地址是32位的情况
    91                                      @@4:
    92 0000010D B407                            mov ah, 0x07
    93 0000010F 8A83[22010000]                  mov al, [string+ebx]
    94 00000115 266689841BA0800B00              mov [es:0xb80a0+ebx*2], ax          ;演示0~4GB寻址
    95 0000011E 43                              inc ebx
    96 0000011F E2EC                            loop @@4
    97                                  
    98 00000121 F4                              hlt
    99                                  
   100                                  
   101                                  ;---------------------------------------------------------------------------------
   102 00000122 73306B65346F723932-         string              db 's0ke4or92xap3fv8giuzjcy5l1m7hd6bnqtw.'
   102 0000012B 786170336676386769-
   102 00000134 757A6A6379356C316D-
   102 0000013D 37686436626E717477-
   102 00000146 2E                 
   103                                  ;---------------------------------------------------------------------------------
   104 00000147 0000                        pgdt                dw 0
   105 00000149 007E0000                                        dd 0x00007e00       ;GDT的物理地址
   106                                  ;---------------------------------------------------------------------------------
   107 0000014D 00<rep B1h>                 times 510-($-$$)    db 0
   108 000001FE 55AA                                            db 0x55, 0xaa
   109                                  
   110                                  
