     1                                          ;设置堆栈段和栈指针
     2 00000000 8CC8                            mov ax, cs
     3 00000002 8ED0                            mov ss, ax
     4 00000004 BC007C                          mov sp, 0x7c00
     5                                  
     6                                          ;计算GDT所在的逻辑段地址
     7 00000007 2EA1[0C7D]                      mov ax, [cs:gdt_base+0x7c00]        ;低16位
     8 0000000B 2E8B16[0E7D]                    mov dx, [cs:gdt_base+0x7c00+0x02]   ;高16位
     9 00000010 BB1000                          mov bx, 16
    10 00000013 F7F3                            div bx
    11 00000015 8ED8                            mov ds, ax                          ;令DS指向该段以进行操作
    12 00000017 89D3                            mov bx, dx                          ;段内起始偏移地址
    13                                  
    14                                          ;创建0#描述符，它是空描述符，处理器的要求
    15 00000019 66C70700000000                  mov dword [bx+0x00], 0x00
    16 00000020 66C7470400000000                mov dword [bx+0x04], 0x00
    17                                  
    18                                          ;创建#1描述符，保护模式下的代码段描述符
    19 00000028 66C74708FF01007C                mov dword [bx+0x08], 0x7c0001ff
    20 00000030 66C7470C00984000                mov dword [bx+0x0c], 0x00409800
    21                                  
    22                                          ;创建#2描述符，保护模式下的数据段描述符（文本模式下的显示缓冲区）
    23 00000038 66C74710FFFF0080                mov dword [bx+0x10], 0x8000ffff
    24 00000040 66C747140B924000                mov dword [bx+0x14], 0x0040920b
    25                                  
    26                                          ;创建#3描述符，保护模式下的堆栈段描述符
    27 00000048 66C74718007A0000                mov dword [bx+0x18], 0x00007a00
    28 00000050 66C7471C00964000                mov dword [bx+0x1c], 0x00409600
    29                                  
    30                                          ;初始化描述符表寄存器GDTR
    31 00000058 2EC706[0A7D]1F00                mov word [cs:gdt_size+0x7c00], 31   ;描述符表的界限（总字节数减一）
    32                                  
    33 0000005F 2E0F0116[0A7D]                  lgdt [cs:gdt_size+0x7c00]
    34                                  
    35 00000065 E492                            in  al, 0x92                        ;南桥芯片内的端口
    36 00000067 0C02                            or  al, 0000_0010B
    37 00000069 E692                            out 0x92, al                        ;打开A20
    38                                  
    39 0000006B FA                              cli                                 ;保护模式下中断机制尚未建立，禁止中断
    40                                  
    41 0000006C 0F20C0                          mov eax, cr0
    42 0000006F 6683C801                        or  eax, 1
    43 00000073 0F22C0                          mov cr0, eax                        ;设置PE位
    44                                  
    45                                          ;以下进入保护模式... ...
    46 00000076 66EA[7E000000]0800              jmp dword 0x0008:flush              ;16位的描述符选择子：32位偏移 0x0008(索引号为 1，TI 位是 0，RPL 为 00)
    47                                                                              ;清流水线并串行化处理器
    48                                  
    49                                  
    50                                          [bits 32]
    51                                  
    52                                      flush:
    53 0000007E 66B91000                        mov cx, 00000000000_10_000B         ;加载数据段选择子(0x10)
    54 00000082 8ED9                            mov ds, cx
    55                                  
    56                                          ;以下在屏幕上显示"Protect mode OK."
    57 00000084 C6050000000050                  mov byte [0x00], 'P'
    58 0000008B C6050200000072                  mov byte [0x02], 'r'
    59 00000092 C605040000006F                  mov byte [0x04], 'o'
    60 00000099 C6050600000074                  mov byte [0x06], 't'
    61 000000A0 C6050800000065                  mov byte [0x08], 'e'
    62 000000A7 C6050A00000063                  mov byte [0x0a], 'c'
    63 000000AE C6050C00000074                  mov byte [0x0c], 't'
    64 000000B5 C6050E00000020                  mov byte [0x0e], ' '
    65 000000BC C605100000006D                  mov byte [0x10], 'm'
    66 000000C3 C605120000006F                  mov byte [0x12], 'o'
    67 000000CA C6051400000064                  mov byte [0x14], 'd'
    68 000000D1 C6051600000065                  mov byte [0x16], 'e'
    69 000000D8 C6051800000020                  mov byte [0x18], ' '
    70 000000DF C6051A0000004F                  mov byte [0x1a], 'O'
    71 000000E6 C6051C0000004B                  mov byte [0x1c], 'K'
    72                                  
    73                                          ;以下用简单的示例来帮助阐述32位保护模式下的堆栈操作
    74 000000ED 66B91800                        mov cx, 00000000000_11_000B         ;加载堆栈段选择子
    75 000000F1 8ED1                            mov ss, cx
    76 000000F3 BC007C0000                      mov esp, 0x7c00
    77                                  
    78 000000F8 89E5                            mov ebp, esp                        ;保存堆栈指针
    79 000000FA 6A2E                            push byte '.'                       ;压入立即数(字节)
    80                                  
    81 000000FC 83ED04                          sub ebp, 4
    82 000000FF 39E5                            cmp ebp, esp                        ;判断压入立即数时， ESP是否减4
    83 00000101 7506                            jnz ghalt
    84 00000103 58                              pop eax
    85 00000104 A21E000000                      mov [0x1e], al                      ;显示句点
    86                                  
    87                                      ghalt:
    88 00000109 F4                              hlt                                 ;已经禁止中断，将不会被唤醒
    89                                  
    90                                  
    91                                  ;---------------------------------------------------------------------------------
    92                                  
    93 0000010A 0000                            gdt_size            dw 0
    94 0000010C 007E0000                        gdt_base            dd 0x00007e00   ;GDT的物理地址
    95                                  
    96 00000110 00<rep EEh>                     times   510-($-$$)  db 0
    97 000001FE 55AA                                                db 0x55, 0xaa
